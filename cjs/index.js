"use strict";var f=Object.create;var u=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var P=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,T=Object.prototype.hasOwnProperty;var E=(e,t)=>{for(var r in t)u(e,r,{get:t[r],enumerable:!0})},g=(e,t,r,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of P(t))!T.call(e,n)&&n!==r&&u(e,n,{get:()=>t[n],enumerable:!(a=v(t,n))||a.enumerable});return e};var O=(e,t,r)=>(r=e!=null?f(S(e)):{},g(t||!e||!e.__esModule?u(r,"default",{value:e,enumerable:!0}):r,e)),M=e=>g(u({},"__esModule",{value:!0}),e);var w={};E(w,{gopool:()=>s});module.exports=M(w);var p=O(require("events")),i=[],c={},s=async({uri:e,body:t,ctx:r,headers:a})=>{let n=c[e];return n?await Promise.resolve(n({body:t,ctx:r,headers:a})):Error("Not found uri: "+e)};s.all=(e,t)=>{i.push({url:e,method:"ALL"}),c["ALL"+e]=t};s.get=(e,t)=>{i.push({url:e,method:"GET"}),c["GET"+e]=t};s.post=(e,t)=>{i.push({url:e,method:"POST"}),c["POST"+e]=t};s.put=(e,t)=>{i.push({url:e,method:"PUT"}),c["PUT"+e]=t};s.delete=(e,t)=>{i.push({url:e,method:"DELETE"}),c["DELETE"+e]=t};s.options=(e,t)=>{i.push({url:e,method:"OPTIONS"}),c["OPTIONS"+e]=t};s.headerGetter=e=>({});s.onMasterBefroeAll=void 0;s.onMaster=void 0;s.useAllRoute=({app:e,pool:t,ctx:r,timeout:a,headerGetter:n})=>{i.forEach(o=>{o.method==="GET"?e.get(o.url,async({query:m,headers:y})=>{let d=new p.default,h=setTimeout(()=>{d.emit("abort")},a),l=await t.run({uri:o.method+o.url,body:m,ctx:r,headers:n(y)},{signal:d});return clearTimeout(h),l}):e[o.method.toLocaleLowerCase()](o.url,async({body:m,headers:y})=>{let d=new p.default,h=setTimeout(()=>{d.emit("abort")},a),l=await t.run({uri:o.method+o.url,body:JSON.parse(m),ctx:r,headers:n(y)},{signal:d});return clearTimeout(h),l})})};s.startInWorker=async e=>{let t={};s.onMasterBefroeAll&&await Promise.resolve(s.onMasterBefroeAll({app:e,ctx:t})),i.forEach(r=>{r.method==="GET"?e.get(r.url,async({query:a,headers:n})=>await s({uri:r.method+r.url,body:a,ctx:t,headers:s.headerGetter(n)})):e[r.method.toLocaleLowerCase()](r.url,async({body:a,headers:n})=>await s({uri:r.method+r.url,body:JSON.parse(a),ctx:t,headers:s.headerGetter(n)}))}),s.onMaster&&await Promise.resolve(s.onMaster({app:e,ctx:t}))};0&&(module.exports={gopool});
