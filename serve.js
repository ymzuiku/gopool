"use strict";var _=Object.create;var h=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var K=Object.getPrototypeOf,V=Object.prototype.hasOwnProperty;var B=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),X=(e,t)=>{for(var r in t)h(e,r,{get:t[r],enumerable:!0})},E=(e,t,r,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of W(t))!V.call(e,o)&&o!==r&&h(e,o,{get:()=>t[o],enumerable:!(s=k(t,o))||s.enumerable});return e};var u=(e,t,r)=>(r=e!=null?_(K(e)):{},E(t||!e||!e.__esModule?h(r,"default",{value:e,enumerable:!0}):r,e)),Y=e=>E(h({},"__esModule",{value:!0}),e);var O=B((le,y)=>{var Z=require("fs"),M=require("path"),ee=require("os"),te=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function re(e){let t={},r=e.toString();r=r.replace(/\r\n?/mg,`
`);let s;for(;(s=te.exec(r))!=null;){let o=s[1],n=s[2]||"";n=n.trim();let i=n[0];n=n.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),i==='"'&&(n=n.replace(/\\n/g,`
`),n=n.replace(/\\r/g,"\r")),t[o]=n}return t}function w(e){console.log(`[dotenv][DEBUG] ${e}`)}function ne(e){return e[0]==="~"?M.join(ee.homedir(),e.slice(1)):e}function oe(e){let t=M.resolve(process.cwd(),".env"),r="utf8",s=Boolean(e&&e.debug),o=Boolean(e&&e.override);e&&(e.path!=null&&(t=ne(e.path)),e.encoding!=null&&(r=e.encoding));try{let n=v.parse(Z.readFileSync(t,{encoding:r}));return Object.keys(n).forEach(function(i){Object.prototype.hasOwnProperty.call(process.env,i)?(o===!0&&(process.env[i]=n[i]),s&&w(o===!0?`"${i}" is already defined in \`process.env\` and WAS overwritten`:`"${i}" is already defined in \`process.env\` and was NOT overwritten`)):process.env[i]=n[i]}),{parsed:n}}catch(n){return s&&w(`Failed to load ${t} ${n.message}`),{error:n}}}var v={config:oe,parse:re};y.exports.config=v.config;y.exports.parse=v.parse;y.exports=v});var P=B((me,N)=>{var se=require("fs"),{resolve:q}=require("path"),{config:ie}=O(),x=process.cwd();N.exports={config:()=>{let t=["./.env","../.env","../../.env","../../../.env","../../../../.env","../../../../../.env"].find(r=>{if(se.existsSync(q(x,r)))return r});if(!t)throw Error("No found .env in "+x);ie({path:q(x,t)})}}});var ae={};X(ae,{gopoolServe:()=>ce});module.exports=Y(ae);var F=u(require("events")),J=u(require("fastify")),L=u(require("node:os")),A=u(require("piscina")),G=u(P());var p=u(require("node:os"));var z=u(require("node:os")),U=()=>{let e=0,t=0,r=z.default.cpus(),s=r.length,o=0;for(;o<s;){let i=r[o];for(let f in i.times)t+=i.times[f];e+=i.times.idle,o++}return{idle:e/r.length,tick:t/r.length}},S=0,$=null,C=()=>(async function(){let e=U();$&&(clearTimeout($),$=null),$=setTimeout(()=>{let t=U(),r=t.idle-e.idle,s=t.tick-e.tick;S=1-r/s,setTimeout(()=>{S=0},1e4)},1e3)}(),S);var l=1e5,Q=1e3*60*60,D=async e=>{let{arrayBuffers:t,external:r,heapTotal:s,heapUsed:o,rss:n}=process.memoryUsage(),i=p.default.freemem(),f=p.default.totalmem(),c={os:{cpu:"",cpus:`${p.default.cpus().length} U`,totalmem:`${f/l} MB`,freemem:`${i/l} MB`,uptime:`${p.default.uptime()/Q} hour`},memoryUsage:{rss:`${n/l} MB`,heapUsed:`${o/l} MB`,heapTotal:`${s/l} MB`,arrayBuffers:`${t/l} MB`,external:`${r/l} MB`},pool:{"QPS/TPS":e.completed/(e.duration/1e3),threads:e.threads.length,queueSize:e.queueSize,completed:e.completed,duration:`${e.duration/Q} hour`,utilization:e.utilization}},m=C();return c.os.cpu=m===0?"load at next second":`${m*100}%`,JSON.stringify(c,null,2)};(0,G.config)();var d=(0,J.default)(),j=L.default.cpus().length,ce=async({port:e=3800,host:t="127.0.0.1",filename:r,infoUrl:s,timeout:o=1e4,minThreads:n=0,maxThreads:i=j,maxQueue:f=j*1e3})=>{try{let c=new A.default({filename:r,env:process.env,idleTimeout:15e3,minThreads:n,maxThreads:i,maxQueue:f,argv:process.argv});s&&d.get(s,()=>D(c));let m=require(r),g=m.default||m;g.beforeAll&&await Promise.resolve(g.beforeAll());let I=JSON.parse(JSON.stringify(g.routes));g=void 0,m=void 0,I.forEach(a=>{a.method==="GET"?d.get(a.url,async({query:T})=>{let b=new F.default,H=setTimeout(()=>{b.emit("abort")},o),R=await c.run({uri:a.method+a.url,body:T},{signal:b});return clearTimeout(H),R}):d[a.method.toLocaleLowerCase()](a.url,async({body:T})=>await c.run({uri:a.method+a.url,body:JSON.parse(T)}))}),console.log(`gopool listen: http://${t}:${e}`),await d.listen({port:e,host:t})}catch(c){console.error(c),d.log.error(c)}};0&&(module.exports={gopoolServe});
